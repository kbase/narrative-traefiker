name: Tag Production Post-Merge
on:
  pull_request:
    branches:
    - ci-alpha
    types:
    - closed


jobs:

  show_env:
    runs-on: ubuntu-16.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"


  tag_prod:
    runs-on: ubuntu-latest
    steps:

    - name: Set App Version and Name Vars
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: |
        echo ::set-env name=TEST_APP::$(echo ${GITHUB_REPOSITORY}/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}' | sed -e "s/:refs//")"-dev")
        echo ::set-env name=MY_APP2::${{ github.event.pull_request.repository }} | awk -F / '{print $1}'
        echo ::set-env name=MY_SHA2::${{ github.event.pull_request.head.sha }} | cut -c 1-7 
        echo ::set-env name=MY_PROD_APP::$(echo ${GITHUB_REPOSITORY}/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}' | sed -e "s/:refs//")"-prod")
        echo "HEAD_SHA:" ${{ github.event.pull_request.head.sha }}
        echo "EVENT:" ${{ github.event }}
        echo "PR:" ${{ github.event.pull_request }}
        echo "WORKFLOW:" ${{ github.event.workflow }}
        echo "RUN_NO:" ${{ github.run_number }}
        echo "SHA:" ${{ github.sha }}
        echo "REF:" ${{ github.ref }}
        echo "HEAD_REF:" ${{ github.head_ref }}
        echo "BASE_REF:" ${{ github.base_ref }}
        echo "CONTEXT:" ${{ github }}
        echo "NEW_HEAD_REF:" 

    - name: Show Test Vars
      run: |
        echo "SHA:" ${{ github.event.pull_request.head.sha }}
        echo "MY_SHA2:" $MY_SHA2
        echo "PR#:" ${{ github.event.pull_request.number }}
        echo "Origin Branch:" ${{ github.head_ref }}
        echo "Repo:" ${{ github.repository }}
        echo "MY_APP2" $MY_APP2


## Set target Docker image based on new pull request label

    - name: Tag Prod
      if: github.event.action == 'closed' && github.event.pull_request.merged == true
      run: |
        docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
        docker pull docker.pkg.github.com/$TEST_APP:${{ github.event.pull_request.head.sha }}
        docker tag docker.pkg.github.com/$TEST_APP:${{ github.event.pull_request.head.sha }} docker.pkg.github.com/$MY_PROD_APP:${{ github.event.pull_request.head.sha }}
        docker tag docker.pkg.github.com/$TEST_APP:${{ github.event.pull_request.head.sha }} docker.pkg.github.com/$MY_PROD_APP:${{ github.event.pull_request.number }}
        docker tag docker.pkg.github.com/$TEST_APP:${{ github.event.pull_request.head.sha }} docker.pkg.github.com/$MY_PROD_APP:latest
        docker push docker.pkg.github.com/$MY_PROD_APP:${{ github.event.pull_request.head.sha }}
        docker push docker.pkg.github.com/$MY_PROD_APP:${{ github.event.pull_request.number }}
        docker push docker.pkg.github.com/$MY_PROD_APP:latest