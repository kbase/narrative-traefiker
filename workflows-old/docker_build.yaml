name: Docker Build

on:
  pull_request:
    branches: 
      - ci-alpha

jobs:

  show_env:
    runs-on: ubuntu-16.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

  docker_deploy:
    runs-on: ubuntu-latest
    steps:

    - name: Check out GitHub Repo
      if: "!contains(github.event.head_commit.message, 'skip ci')"
      with:
        ref: ${{ github.event.pull_request.head.sha }}
      uses: actions/checkout@v2

    - name: Set Version and Repo Name
      run: |
        echo ::set-env name=APP_VERSION_NUM::$(sed -n '/module-version:/{n;p;}' kbase.yml | sed 's/ //g')
        echo ::set-env name=MY_APP::$(echo ${GITHUB_REPOSITORY}/$(echo $GITHUB_REPOSITORY | awk -F / '{print $2}' | sed -e "s/:refs//")"-dev")
        echo ::set-env name=MY_APP2::$(echo {{ github.event.pull_request.repository }} | awk -F / '{print $1}')
        echo ::set-env name=MY_SHA::$(git rev-parse --short=7 HEAD)
        echo ::set-env name=MY_SHA2::$(echo {{ github.event.pull_request.head.sha }} | cut -c 1-7)
        echo ::set-env name=MY_BRANCH::$(git branch --show-current)
        echo ::set-env name=BRANCH::$(git branch --show-current)
        echo ::set-env name=PR::$(echo "$GITHUB_REF" | awk -F / '{print $3}')
        echo ::set-env name=PULL_NUMBER::$(echo "$GITHUB_REF" | awk -F / '{print $2,$3}' | sed -e 's/ /_/g')

    - name: Verify Version and Repo Name
      run: |
        echo "Head SHA:" ${{ github.event.pull_request.head.sha }}
        echo "MY_SHA:" $MY_SHA
        echo "Version:" $APP_VERSION_NUM
        echo "App:" $MY_APP
        echo "Repo:" $GITHUB_REPOSITORY
        echo "Ref:" $GITHUB_REF
        echo "PR No:" $PR
        echo "PR:" $PULL_NUMBER
        echo "HeadRef:" $GITHUB_HEAD_REF
        echo "Branch:" $MY_BRANCH

    - name: Show Test Vars
      run: |
        echo "SHA:" ${{ github.event.pull_request.head.sha }}
        echo "MY_SHA2:" $MY_SHA2
        echo "PR#:" ${{ github.event.pull_request.number }}
        echo "Origin Branch:" ${{ github.head_ref }}
        echo "App:" ${{ github.repository }}
        echo "MY_APP2" $MY_APP2


    - name: Build and Push to Packages
      if: "!contains(github.event.head_commit.message, 'skip ci')" 
      run: |
        echo "App:" $MY_APP
        docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
        docker build . -t docker.pkg.github.com/$MY_APP --label pull=$PR --label branch=$GITHUB_HEAD_REF --label us.kbase.vcs-branch=$GITHUB_HEAD_REF
        docker tag docker.pkg.github.com/$MY_APP docker.pkg.github.com/$MY_APP:${{ github.event.pull_request.head.sha }}
        docker tag docker.pkg.github.com/$MY_APP docker.pkg.github.com/$MY_APP:$GITHUB_HEAD_REF
        docker tag docker.pkg.github.com/$MY_APP docker.pkg.github.com/$MY_APP:${{ github.event.pull_request.number }}
        docker push docker.pkg.github.com/$MY_APP:${{ github.event.pull_request.head.sha }}
        docker push docker.pkg.github.com/$MY_APP:$GITHUB_HEAD_REF
        docker push docker.pkg.github.com/$MY_APP:${{ github.event.pull_request.number }}
